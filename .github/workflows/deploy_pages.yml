name: Deploy MkDocs site to Pages

on:
  # Runs on pushes targeting the `main` branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: {}

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      # https://github.com/actions/cache
      - uses: actions/cache@v3
        with:
          path: .cache
          key: mkdocs-material-cache
      - run: pip install --requirement=requirements.txt
      # `_site` is the default path for actions/upload-pages-artifact
      - run: mkdocs build --strict --site-dir=_site --verbose
      # https://github.com/actions/upload-pages-artifact
      - uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write  # to deploy to Pages
      id-token: write  # to verify the deployment originates from an appropriate source
    steps:
      # https://github.com/actions/deploy-pages
      - uses: actions/deploy-pages@v4
        id: deployment  # referenced in environment.url
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
